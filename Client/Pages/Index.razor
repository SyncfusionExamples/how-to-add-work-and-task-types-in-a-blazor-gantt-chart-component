@page "/"

<SfGantt @ref="Gantt" DataSource="@TaskCollection" Height="450px" Width="1170px"
         ProjectStartDate="@ProjectStart" ProjectEndDate="@ProjectEnd" WorkUnit="WorkUnit.Hour">

    <GanttTaskFields Id="TaskId" Name="TaskName"
                     StartDate="StartDate" EndDate="EndDate"
                     Duration="Duration" Progress="Progress" ParentID="ParentId"
                     Work="Work"
                     TaskType="TaskType"
                     ResourceInfo="Resources">
    </GanttTaskFields>

    <GanttColumns>
        <GanttColumn Field="TaskId" Width="65" IsPrimaryKey="true"></GanttColumn>
        <GanttColumn Field="TaskName" Width="150"></GanttColumn>
        <GanttColumn Field="Work" Width="120"></GanttColumn>
        <GanttColumn Field="TaskType" Width="160"></GanttColumn>
        <GanttColumn Field="Duration" Width="85"></GanttColumn>
        <GanttColumn Field="Resources" HeaderText="Event Resources" Width="250"></GanttColumn>
        <GanttColumn Field="StartDate"></GanttColumn>
        <GanttColumn Field="Progress"></GanttColumn>
    </GanttColumns>

    <GanttResourceFields TResources="ResourceAlloacteData"
                         Resources="@ResourceCollection"
                         Id="ResourceId"
                         Name="ResourceName"
                         Unit="Unit">
    </GanttResourceFields>

    <GanttSplitterSettings Position="50%" />
    <GanttLabelSettings RightLabel="Resources" TValue="TaskData" />
    <GanttEditSettings AllowEditing="true" Mode="Syncfusion.Blazor.Gantt.EditMode.Auto" />
</SfGantt>

@code {

    public SfGantt<TaskData> Gantt;
    public DateTime ProjectStart = new DateTime(2019, 03, 28);
    public DateTime ProjectEnd = new DateTime(2019, 04, 17);
    public List<TaskData> TaskCollection { get; set; }
    public List<ResourceAlloacteData> ResourceCollection { get; set; }

    public static List<ResourceAlloacteData> GetResources = new List<ResourceAlloacteData>()
{
        new ResourceAlloacteData() { ResourceId= 1, ResourceName= "Martin Tamer" },
        new ResourceAlloacteData() { ResourceId= 2, ResourceName= "Rose Fuller" },
        new ResourceAlloacteData() { ResourceId= 3, ResourceName= "Margaret Buchan" },
        new ResourceAlloacteData() { ResourceId= 4, ResourceName= "Fuller King" },
        new ResourceAlloacteData() { ResourceId= 5, ResourceName= "Davolio Fuller" },
        new ResourceAlloacteData() { ResourceId= 6, ResourceName= "Van Jack" },
        new ResourceAlloacteData() { ResourceId= 7, ResourceName= "Fuller Buchanan" },
        new ResourceAlloacteData() { ResourceId= 8, ResourceName= "Jack Davolio" },
        new ResourceAlloacteData() { ResourceId= 9, ResourceName= "Tamer Vinet" },
        new ResourceAlloacteData() { ResourceId= 10, ResourceName= "Vinet Fuller" },
        new ResourceAlloacteData() { ResourceId= 11, ResourceName= "Bergs Anton" },
        new ResourceAlloacteData() { ResourceId= 12, ResourceName= "Construction Supervisor" }
    };

    protected override void OnInitialized()
    {
        this.TaskCollection = GetTaskCollection();
        this.ResourceCollection = GetResources;
    }

    public class ResourceAlloacteData
    {
        public int ResourceId { get; set; }
        public string ResourceName { get; set; }
        public double Unit { get; set; }
    }

    public class TaskData
    {
        public int TaskId { get; set; }
        public string TaskName { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
        public string Duration { get; set; }
        public int Progress { get; set; }
        public int? ParentId { get; set; }
        public double? Work { get; set; }
        public string TaskType { get; set; }
        public List<ResourceAlloacteData> Resources { get; set; }
    }

    public static List<TaskData> GetTaskCollection()
    {
        List<TaskData> Tasks = new List<TaskData>() {
        new TaskData() {
            TaskId = 1,
            TaskName = "Project initiation",
            StartDate = new DateTime(2019, 03, 28),
            EndDate = new DateTime(2019, 07, 28),
            Duration="4",
            Work=128
        },
        new TaskData() {
            TaskId = 2,
            TaskName = "Identify Site location",
            StartDate = new DateTime(2019, 03, 29),
            Progress = 30,
            ParentId = 1,
            Duration="2",
            Work=16,
            TaskType="FixedDuration",
            Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId = 1, Unit = 70 } ,new ResourceAlloacteData() { ResourceId = 6 } }
            },
        new TaskData() {
            TaskId = 3,
            TaskName = "Perform soil test",
            StartDate = new DateTime(2019, 03, 29),
            Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId = 2 },new ResourceAlloacteData() { ResourceId = 3 } ,new ResourceAlloacteData() { ResourceId = 5 } },
            ParentId = 1,
            Duration="4",
            Work=96
        },
        new TaskData() {
            TaskId = 4,
            TaskName = "Soil test approval",
            StartDate = new DateTime(2019, 03, 29),
            Duration = "1",
            Progress = 30,
            ParentId = 1,
            Work=16,
            Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId = 8 } ,new ResourceAlloacteData() { ResourceId = 9 } },
        },
        new TaskData() {
            TaskId = 5,
            TaskName = "Project estimation",
            StartDate = new DateTime(2019, 03, 29),
            EndDate = new DateTime(2019, 04, 2),
            Duration="4"
        },
        new TaskData() {
            TaskId = 6,
            TaskName = "Develop floor plan for estimation",
            StartDate = new DateTime(2019, 03, 29),
            Duration = "3",
            Progress = 30,
            ParentId = 5,
            Work=30,
            Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId = 4, Unit = 50 } },
        },
        new TaskData() {
            TaskId = 7,
            TaskName = "List materials",
            StartDate = new DateTime(2019, 04, 01),
            Duration = "3",
            Progress = 30,
            ParentId = 5,
            Work=48,
            Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId = 4, Unit = 50 },new ResourceAlloacteData() { ResourceId = 8 } },
        },
        new TaskData() {
            TaskId = 8,
            TaskName = "Estimation approval",
            StartDate = new DateTime(2019, 04, 01),
            Duration = "2",
            ParentId = 5,
            Work=60,
            Resources = new List<ResourceAlloacteData>(){ new ResourceAlloacteData() { ResourceId = 12 },new ResourceAlloacteData() { ResourceId = 5 } },
        }
    };
        return Tasks;
    }
}